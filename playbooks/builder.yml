---
- name: Build image
  hosts: all

  vars:
    _build_name: "{{ build_name | default('osism-node') }}"
    # TODO: find out how to pass this to diskimage-builder
    _image_format: "{{ image_format | default('qcow2') }}"

  tasks:
    - name: Run diskimage-builder
      ansible.builtin.shell:
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir }}"
        cmd: |
          set -e
          set -x

          export PATH=/home/zuul/.local/bin:$PATH

          source /tmp/venv/bin/activate

          diskimage-builder files/{{ _build_name }}.yml

      changed_when: true

    - name: Run upload script
      ansible.builtin.shell:  # noqa command-instead-of-module
        executable: /bin/bash
        chdir: "{{ zuul.project.src_dir }}"
        cmd: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set minio https://swift.services.a.regiocloud.tech {{ minio.MINIO_ACCESS_KEY | trim }} {{ minio.MINIO_SECRET_KEY | trim }}

          cp {{ _build_name }}.{{ _image_format }}.sha256 {{ _build_name }}.{{ _image_format }}.CHECKSUM

          if [[ "{{ _image_format }}" == "raw" ]]; then
              zip {{ _build_name }}.zip {{ _build_name }}.{{ _image_format }} {{ _build_name }}.{{ _image_format }}.CHECKSUM
              ./mc cp {{ _build_name }}.zip minio/openstack-ironic-images
          else
              ./mc cp {{ _build_name }}.{{ _image_format }}.CHECKSUM minio/openstack-ironic-images
              ./mc cp {{ _build_name }}.{{ _image_format }} minio/openstack-ironic-images
          fi

      when: upload_image | bool
      no_log: true
      changed_when: true
