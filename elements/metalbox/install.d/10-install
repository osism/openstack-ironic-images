#!/bin/bash

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

export LANG=en_US.UTF-8
export LANGUAGE=en_US
export LC_ALL=

export PATH=/root/.local/bin:$PATH

# prepare ansible

apt-get install --yes pipx
pipx install 'ansible-core>=2.18.0,<2.19.0'

# copy required files

cp /tmp/in_target.d/run.sh /usr/local/bin/run.sh
chmod +x /usr/local/bin/run.sh

cp /tmp/in_target.d/99_metalbox.cfg /etc/cloud/cloud.cfg.d/99_metalbox.cfg
chown root:root /etc/cloud/cloud.cfg.d/99_metalbox.cfg
chmod 0644 /etc/cloud/cloud.cfg.d/99_metalbox.cfg

# install required ansible collections

ansible-galaxy collection install --collections-path /usr/share/ansible/collections ansible.netcommon
ansible-galaxy collection install --collections-path /usr/share/ansible/collections ansible.posix
ansible-galaxy collection install --collections-path /usr/share/ansible/collections community.docker
ansible-galaxy collection install --collections-path /usr/share/ansible/collections community.general

ansible-galaxy collection install --collections-path /usr/share/ansible/collections git+https://github.com/osism/ansible-collection-services
ansible-galaxy collection install --collections-path /usr/share/ansible/collections git+https://github.com/osism/ansible-collection-commons

# run part 1

ansible-playbook -i localhost, /tmp/in_target.d/part1.yml

# clone configuration repository

git clone https://github.com/osism/metalbox /opt/configuration
chown -R dragon:dragon /opt/configuration

# prepare manager environment

pushd /opt/configuration/environments/manager
sudo -u dragon bash run.sh noop
sed -i 's/\(INSTALL_ANSIBLE_ROLES=${INSTALL_ANSIBLE_ROLES:-\)true/\1false/' /opt/configuration/environments/manager/run.sh
popd

# download registry image

skopeo copy --dest-tls-verify=false docker://docker.io/library/registry:3 docker-archive:/opt/registry.tar:registry:3

# download alpine image

skopeo copy --dest-tls-verify=false docker://docker.io/library/alpine:3 docker-archive:/opt/alpine.tar:alpine:3

# download registry volume archive

wget -O /opt/registry.tar.bz2 https://swift.services.a.regiocloud.tech/swift/v1/AUTH_b182637428444b9aa302bb8d5a5a418c/metalbox/registry.tar.bz2

# download ironic images

wget -O /opt/ironic-agent.initramfs https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos9-stable-2024.2.initramfs
wget -O /opt/ironic-agent.kernel https://tarballs.opendev.org/openstack/ironic-python-agent/dib/files/ipa-centos9-stable-2024.2.kernel

# run part 2

ansible-playbook -i localhost, /tmp/in_target.d/part2.yml

# cleanup

rm -rf /root/.ansible
